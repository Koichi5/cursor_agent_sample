name: Flutter Golden Tests

on:
  pull_request:
    paths:
      - "lib/views/**"
      - "test/views/**"
      - "pubspec.yaml"

permissions:
  contents: write
  pull-requests: write

jobs:
  golden_tests:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.27.4"
          channel: "stable"
          cache: true

      - name: Install dependencies
        run: flutter pub get

      - name: Get changed files in this PR
        id: changed-files
        uses: tj-actions/changed-files@v42
        with:
          files: |
            lib/views/**/*.dart
          base_sha: ${{ github.event.pull_request.base.sha }}
          sha: ${{ github.event.pull_request.head.sha }}

      - name: Detect file changes
        if: steps.changed-files.outputs.any_changed == 'true'
        id: detect-changes
        run: |
          new_view_files=""
          modified_view_files=""

          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            if [[ $file == lib/views/* ]]; then
              component_name=$(basename ${file%.*})
              test_dir="test/views/${component_name}_test"

              if [ ! -d "$test_dir" ]; then
                # New view file
                if [ -n "$new_view_files" ]; then
                  new_view_files="$new_view_files,"
                fi
                new_view_files="$new_view_files$file"
                echo "New view detected: $component_name"
              else
                # Modified view file
                if [ -n "$modified_view_files" ]; then
                  modified_view_files="$modified_view_files,"
                fi
                modified_view_files="$modified_view_files$file"
                echo "Modified view detected: $component_name"
              fi
            fi
          done

          echo "has_new_views=false" >> $GITHUB_OUTPUT
          echo "has_modified_views=false" >> $GITHUB_OUTPUT

          if [ -n "$new_view_files" ]; then
            echo "has_new_views=true" >> $GITHUB_OUTPUT
            echo "new_view_files=$new_view_files" >> $GITHUB_OUTPUT
          fi

          if [ -n "$modified_view_files" ]; then
            echo "has_modified_views=true" >> $GITHUB_OUTPUT
            echo "modified_view_files=$modified_view_files" >> $GITHUB_OUTPUT
          fi

      # 新規ビューのテストファイル作成とGolden Test実行
      - name: Handle new views
        if: steps.detect-changes.outputs.has_new_views == 'true'
        run: |
          IFS=',' read -ra view_files <<< "${{ steps.detect-changes.outputs.new_view_files }}"
          for file in "${view_files[@]}"; do
            component_name=$(basename ${file%.*})
            test_dir="test/views/${component_name}_test"
            test_file="$test_dir/${component_name}_test.dart"

            # Create test directory and Golden Test file
            mkdir -p "$test_dir/goldens/ci"

            # Create test file from template
            cat > "$test_file" << EOL
              import 'package:alchemist/alchemist.dart';
              import 'package:cursor_agent_sample/views/$component_name/$component_name.dart';
              import 'package:flutter/material.dart';
              import 'package:flutter_test/flutter_test.dart';

              import '../../support/alchemist/golden_test_device_scenario.dart';

              @Tags(['golden'])
              void main() {
                group('${component_name} Golden Test', () {
                  Widget buildMyApp() {
                    return MaterialApp(
                      theme: ThemeData(
                        useMaterial3: true,
                        colorScheme: ColorScheme.fromSeed(
                          seedColor: Colors.deepPurple,
                          brightness: Brightness.light,
                        ),
                      ),
                      home: const ${component_name}(),
                    );
                  }

                  final phonePortrait = Device.phonePortrait;

                  goldenTest(
                    'Default',
                    fileName: '${component_name}_default',
                    builder: () {
                      return GoldenTestGroup(
                        columns: 1,
                        children: [
                          GoldenTestDeviceScenario(
                            name: phonePortrait.name,
                            device: phonePortrait,
                            builder: () => buildMyApp(),
                          ),
                        ],
                      );
                    },
                  );
                });
              }
            EOL

            # Run Golden Test for new view
            flutter test --update-goldens "$test_file"
          done

      # 新規ビューの変更をコミット
      - name: Commit new view tests
        if: steps.detect-changes.outputs.has_new_views == 'true'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add test/views/
          git commit -m "test: Add Golden Tests for new views [skip ci]"
          git push origin HEAD:${{ github.head_ref }}
          echo "new_views_sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

      # 既存ビューの変更を処理
      - name: Handle modified views
        if: steps.detect-changes.outputs.has_modified_views == 'true'
        run: |
          IFS=',' read -ra view_files <<< "${{ steps.detect-changes.outputs.modified_view_files }}"

          # Create base images
          git checkout -f ${{ github.event.pull_request.base.sha }}
          flutter pub get
          for file in "${view_files[@]}"; do
            component_name=$(basename ${file%.*})
            test_path="test/views/${component_name}_test/${component_name}_test.dart"
            test_dir="test/views/${component_name}_test"
            mkdir -p "$test_dir/failures"
            flutter test --update-goldens "$test_path"
            cp "$test_dir/goldens/ci/${component_name}_default.png" "$test_dir/failures/my_app_default_masterImage.png"
          done

          # Create test images
          git checkout -f ${{ github.event.pull_request.head.sha }}
          flutter pub get
          for file in "${view_files[@]}"; do
            component_name=$(basename ${file%.*})
            test_path="test/views/${component_name}_test/${component_name}_test.dart"
            test_dir="test/views/${component_name}_test"
            mkdir -p "$test_dir/failures"
            flutter test --update-goldens "$test_path"
            cp "$test_dir/goldens/ci/${component_name}_default.png" "$test_dir/failures/my_app_default_testImage.png"
          done

      # 変更のあったビューの画像をコミット
      - name: Commit modified view images
        if: steps.detect-changes.outputs.has_modified_views == 'true'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add test/views/*/failures/*.png
          git commit -m "test: Update Golden Test images for modified views [skip ci]"
          git push origin HEAD:${{ github.head_ref }}
          echo "modified_views_sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

      # PR説明の更新
      - name: Update PR description
        if: steps.detect-changes.outputs.has_new_views == 'true' || steps.detect-changes.outputs.has_modified_views == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          pr_body="# UI の変更確認\n\n"

          # 新規ビューの説明
          if [ "${{ steps.detect-changes.outputs.has_new_views }}" == "true" ]; then
            pr_body+="## 新規追加されたビュー\n"
            IFS=',' read -ra new_files <<< "${{ steps.detect-changes.outputs.new_view_files }}"
            for file in "${new_files[@]}"; do
              component_name=$(basename ${file%.*})
              pr_body+="- ${component_name}\n"
              pr_body+="![New View](https://raw.githubusercontent.com/${{ github.repository }}/${{ steps.commit-new-views.outputs.new_views_sha }}/test/views/${component_name}_test/goldens/ci/${component_name}_default.png)\n\n"
            done
          fi

          # 変更されたビューの説明
          if [ "${{ steps.detect-changes.outputs.has_modified_views }}" == "true" ]; then
            pr_body+="## 変更されたビュー\n"
            IFS=',' read -ra modified_files <<< "${{ steps.detect-changes.outputs.modified_view_files }}"
            for file in "${modified_files[@]}"; do
              component_name=$(basename ${file%.*})
              pr_body+="### ${component_name}\n"
              pr_body+="| Before | After |\n|--------|-------|\n"
              pr_body+="| ![Before](https://raw.githubusercontent.com/${{ github.repository }}/${{ github.event.pull_request.base.sha }}/test/views/${component_name}_test/failures/my_app_default_masterImage.png) | ![After](https://raw.githubusercontent.com/${{ github.repository }}/${{ steps.commit-modified-views.outputs.modified_views_sha }}/test/views/${component_name}_test/failures/my_app_default_testImage.png) |\n\n"
            done
          fi

          pr_body+="変更内容を確認し、意図した通りの変更になっているかご確認ください。\n"

          gh pr edit ${{ github.event.pull_request.number }} --body "$pr_body"
