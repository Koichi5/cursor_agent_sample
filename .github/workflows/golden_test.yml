name: Flutter Golden Tests

on:
  pull_request:
    paths:
      - "lib/views/**"
      - "test/views/**"
      - "pubspec.yaml"

permissions:
  contents: write
  pull-requests: write

jobs:
  golden_tests:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.27.4"
          channel: "stable"
          cache: true

      - name: Install dependencies
        run: flutter pub get

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v42
        with:
          files: |
            lib/views/**/*.dart

      - name: Create base images
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          git checkout -f ${{ github.base_ref }}
          flutter pub get
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            if [[ $file == lib/views/* ]]; then
              component_name=$(basename ${file%.*})
              test_path="test/views/${component_name}_test/${component_name}_test.dart"
              if [ -f "$test_path" ]; then
                echo "Running Golden Test for $component_name (base)"
                flutter test --update-goldens "$test_path"
                mkdir -p "test/views/${component_name}_test/failures"
                cp "test/views/${component_name}_test/goldens/ci/my_app_default.png" "test/views/${component_name}_test/failures/my_app_default_masterImage.png"
              fi
            fi
          done

      - name: Create test images
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          git checkout -f ${{ github.head_ref }}
          flutter pub get
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            if [[ $file == lib/views/* ]]; then
              component_name=$(basename ${file%.*})
              test_path="test/views/${component_name}_test/${component_name}_test.dart"
              if [ -f "$test_path" ]; then
                echo "Running Golden Test for $component_name (test)"
                flutter test --update-goldens "$test_path"
                cp "test/views/${component_name}_test/goldens/ci/my_app_default.png" "test/views/${component_name}_test/failures/my_app_default_testImage.png"
              fi
            fi
          done

      - name: Commit and push images
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add test/views/*/failures/*.png test/views/*/goldens/ci/*.png
          git commit -m "test: Update Golden Test images [skip ci]"
          git fetch origin ${{ github.head_ref }}
          git rebase origin/${{ github.head_ref }}
          git push -f origin ${{ github.head_ref }}

      - name: Generate comparison markdown
        if: steps.changed-files.outputs.any_changed == 'true'
        id: generate-markdown
        run: |
          echo "Generating comparison markdown..."
          markdown=""
          repo_url="https://raw.githubusercontent.com/${{ github.repository }}/${{ github.head_ref }}"

          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            if [[ $file == lib/views/* ]]; then
              component_name=$(basename ${file%.*})
              test_dir="test/views/${component_name}_test"
              if [ -d "$test_dir" ]; then
                markdown+="### ${component_name} の変更\\n\\n"
                markdown+="| 変更前 | 変更後 |\\n"
                markdown+="|--------|--------|\\n"
                markdown+="|![Before]($repo_url/$test_dir/failures/my_app_default_masterImage.png)|![After]($repo_url/$test_dir/failures/my_app_default_testImage.png)|\\n"
                markdown+="\\n"
              fi
            fi
          done
          echo "markdown<<EOF" >> $GITHUB_OUTPUT
          echo "$markdown" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Update PR description
        if: steps.changed-files.outputs.any_changed == 'true'
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          pr_body="## UI の変更確認

          以下のファイルのUI変更がありました：

          ${{ steps.changed-files.outputs.all_changed_files }}

          ## Golden Test の結果

          ${{ steps.generate-markdown.outputs.markdown }}

          変更内容を確認し、意図した通りの変更になっているかご確認ください。
          問題がなければ、\`flutter test --update-goldens --tags=golden\` を実行してGolden Imageを更新してください。"

          gh pr edit ${{ github.event.pull_request.number }} --body "$pr_body"
